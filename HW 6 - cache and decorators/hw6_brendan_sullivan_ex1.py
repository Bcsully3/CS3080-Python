# -*- coding: utf-8 -*-
"""hw6_Brendan_Sullivan_ex1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12ODcKXY11J3V_Q0PVJav5sxK88qWunOY
"""

"""
Homework 6, Exercise 1
Brendan Sullivan
4/10/2023
This program provides a function decorator that sleeps for a specified amount of time before
calling the function. If a time is not provided, then the default is 1 second. 
"""


import time

# definition of decorator with a default sleep time of 1
def funcDecorator(sec=1):
  def inner(func):
    def wrapper():
      print("Sleeping for " +  str(sec) + " seconds")
      time.sleep(sec)
      func() #call the "awake()" function
			
    return wrapper 
  return inner

def awake():
	print("Awake!")

# decorator call, setting the sleep time to 5 and the function for it run to "awake()"
funcDecorator()(awake)()